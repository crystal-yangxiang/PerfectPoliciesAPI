// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfectPolicies.Models;

namespace PerfectPolicies.Migrations
{
    [DbContext(typeof(PerfectPoliciesContext))]
    partial class PerfectPoliciesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PerfectPolicies.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("OptionIsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("OptionLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            OptionId = 1,
                            OptionIsCorrect = true,
                            OptionLetter = "a. ",
                            OptionText = "Canberra",
                            QuestionId = 3
                        },
                        new
                        {
                            OptionId = 2,
                            OptionIsCorrect = false,
                            OptionLetter = "b. ",
                            OptionText = "Brisbane",
                            QuestionId = 3
                        },
                        new
                        {
                            OptionId = 3,
                            OptionIsCorrect = false,
                            OptionLetter = "c. ",
                            OptionText = "Sydney",
                            QuestionId = 3
                        },
                        new
                        {
                            OptionId = 4,
                            OptionIsCorrect = false,
                            OptionLetter = "d. ",
                            OptionText = "Melbourne",
                            QuestionId = 3
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionTopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            QuestionText = "When looking to work at heights, I need to review:",
                            QuestionTopic = "Working at Heights",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 2,
                            QuestionText = "With copyright material form our client:",
                            QuestionTopic = "Copyright",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 3,
                            QuestionText = "The capital of Australia is::",
                            QuestionTopic = "Geography",
                            QuizId = 3
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PassPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("QuizCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuizCreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuizTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuizTopic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuizId");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            QuizId = 1,
                            PassPercentage = 100,
                            QuizCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuizCreatorName = "Steve Jones from Steve's Warehouse",
                            QuizTitle = "Steve's Warehouse Policy Quiz",
                            QuizTopic = "Working at Heights"
                        },
                        new
                        {
                            QuizId = 2,
                            PassPercentage = 100,
                            QuizCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuizCreatorName = "Steve Jones from Steve's Warehouse",
                            QuizTitle = "Steve's Warehouse Policy Quiz",
                            QuizTopic = "Copyright"
                        },
                        new
                        {
                            QuizId = 3,
                            PassPercentage = 100,
                            QuizCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuizCreatorName = "Yang Xiang",
                            QuizTitle = "How well do you know Australia?",
                            QuizTopic = "Geography"
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.UserInfo", b =>
                {
                    b.Property<int>("UserInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserInfoId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserInfoId = 1,
                            Password = "PerfectPolicies!22",
                            UserName = "AdminPerfectPolicies"
                        },
                        new
                        {
                            UserInfoId = 2,
                            Password = "abc_1234",
                            UserName = "Yang"
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.Option", b =>
                {
                    b.HasOne("PerfectPolicies.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("PerfectPolicies.Models.Question", b =>
                {
                    b.HasOne("PerfectPolicies.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("PerfectPolicies.Models.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("PerfectPolicies.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
